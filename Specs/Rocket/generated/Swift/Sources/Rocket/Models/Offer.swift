//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation
import JSONUtilities

public class Offer: OfferRights {

    public enum Availability: String {
        case available = "Available"
        case comingSoon = "ComingSoon"

        public static let cases: [Availability] = [
          .available,
          .comingSoon,
        ]
    }

    public var price: Float

    public var availability: Availability

    public var endDate: Date?

    public var name: String?

    public var startDate: Date?

    /** The code of the subscription this offer is offered under, if any. */
    public var subscriptionCode: String?

    public init(deliveryType: DeliveryType, scopes: [String], resolution: Resolution, ownership: Ownership, price: Float, availability: Availability, exclusionRules: [ExclusionRule]? = nil, maxDownloads: Int? = nil, maxPlays: Int? = nil, playPeriod: Int? = nil, rentalPeriod: Int? = nil, endDate: Date? = nil, name: String? = nil, startDate: Date? = nil, subscriptionCode: String? = nil) {
        self.price = price
        self.availability = availability
        self.endDate = endDate
        self.name = name
        self.startDate = startDate
        self.subscriptionCode = subscriptionCode
        super.init(deliveryType: deliveryType, scopes: scopes, resolution: resolution, ownership: ownership, exclusionRules: exclusionRules, maxDownloads: maxDownloads, maxPlays: maxPlays, playPeriod: playPeriod, rentalPeriod: rentalPeriod)
    }

    public required init(jsonDictionary: JSONDictionary) throws {
        price = try jsonDictionary.json(atKeyPath: "price")
        availability = try jsonDictionary.json(atKeyPath: "availability")
        endDate = jsonDictionary.json(atKeyPath: "endDate")
        name = jsonDictionary.json(atKeyPath: "name")
        startDate = jsonDictionary.json(atKeyPath: "startDate")
        subscriptionCode = jsonDictionary.json(atKeyPath: "subscriptionCode")
        try super.init(jsonDictionary: jsonDictionary)
    }

    public override func encode() -> JSONDictionary {
        var dictionary: JSONDictionary = [:]
        dictionary["price"] = price
        dictionary["availability"] = availability.encode()
        if let endDate = endDate?.encode() {
            dictionary["endDate"] = endDate
        }
        if let name = name {
            dictionary["name"] = name
        }
        if let startDate = startDate?.encode() {
            dictionary["startDate"] = startDate
        }
        if let subscriptionCode = subscriptionCode {
            dictionary["subscriptionCode"] = subscriptionCode
        }
        let superDictionary = super.encode()
        for (key, value) in superDictionary {
            dictionary[key] = value
        }
        return dictionary
    }
}
