//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct SeriesEpisodesSummary: APIModel {

    /** Number of all aired episodes for this series */
    public var airedEpisodes: String?

    public var airedSeasons: [String]?

    /** Number of all dvd episodes for this series */
    public var dvdEpisodes: String?

    public var dvdSeasons: [String]?

    public init(airedEpisodes: String? = nil, airedSeasons: [String]? = nil, dvdEpisodes: String? = nil, dvdSeasons: [String]? = nil) {
        self.airedEpisodes = airedEpisodes
        self.airedSeasons = airedSeasons
        self.dvdEpisodes = dvdEpisodes
        self.dvdSeasons = dvdSeasons
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        airedEpisodes = try container.decodeIfPresent("airedEpisodes")
        airedSeasons = try container.decodeArrayIfPresent("airedSeasons")
        dvdEpisodes = try container.decodeIfPresent("dvdEpisodes")
        dvdSeasons = try container.decodeArrayIfPresent("dvdSeasons")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(airedEpisodes, forKey: "airedEpisodes")
        try container.encodeIfPresent(airedSeasons, forKey: "airedSeasons")
        try container.encodeIfPresent(dvdEpisodes, forKey: "dvdEpisodes")
        try container.encodeIfPresent(dvdSeasons, forKey: "dvdSeasons")
    }

}
