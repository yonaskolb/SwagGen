//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct SeriesActorsData: APIModel {

    public var _id: Int?

    public var image: String?

    public var imageAdded: String?

    public var imageAuthor: Int?

    public var lastUpdated: String?

    public var name: String?

    public var role: String?

    public var seriesId: Int?

    public var sortOrder: Int?

    public init(_id: Int? = nil, image: String? = nil, imageAdded: String? = nil, imageAuthor: Int? = nil, lastUpdated: String? = nil, name: String? = nil, role: String? = nil, seriesId: Int? = nil, sortOrder: Int? = nil) {
        self._id = _id
        self.image = image
        self.imageAdded = imageAdded
        self.imageAuthor = imageAuthor
        self.lastUpdated = lastUpdated
        self.name = name
        self.role = role
        self.seriesId = seriesId
        self.sortOrder = sortOrder
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        _id = try container.decodeIfPresent("id")
        image = try container.decodeIfPresent("image")
        imageAdded = try container.decodeIfPresent("imageAdded")
        imageAuthor = try container.decodeIfPresent("imageAuthor")
        lastUpdated = try container.decodeIfPresent("lastUpdated")
        name = try container.decodeIfPresent("name")
        role = try container.decodeIfPresent("role")
        seriesId = try container.decodeIfPresent("seriesId")
        sortOrder = try container.decodeIfPresent("sortOrder")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(_id, forKey: "id")
        try container.encodeIfPresent(image, forKey: "image")
        try container.encodeIfPresent(imageAdded, forKey: "imageAdded")
        try container.encodeIfPresent(imageAuthor, forKey: "imageAuthor")
        try container.encodeIfPresent(lastUpdated, forKey: "lastUpdated")
        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeIfPresent(role, forKey: "role")
        try container.encodeIfPresent(seriesId, forKey: "seriesId")
        try container.encodeIfPresent(sortOrder, forKey: "sortOrder")
    }

}
