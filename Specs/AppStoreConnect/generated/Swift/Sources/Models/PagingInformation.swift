//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class PagingInformation: APIModel {

    public var paging: Paging

    public class Paging: APIModel {

        public var total: Int

        public var limit: Int

        public init(total: Int, limit: Int) {
            self.total = total
            self.limit = limit
        }

        public required init(from decoder: Decoder) throws {
            let container = try decoder.container(keyedBy: StringCodingKey.self)

            total = try container.decode("total")
            limit = try container.decode("limit")
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: StringCodingKey.self)

            try container.encode(total, forKey: "total")
            try container.encode(limit, forKey: "limit")
        }

        public func isEqual(to object: Any?) -> Bool {
          guard let object = object as? Paging else { return false }
          guard self.total == object.total else { return false }
          guard self.limit == object.limit else { return false }
          return true
        }

        public static func == (lhs: Paging, rhs: Paging) -> Bool {
            return lhs.isEqual(to: rhs)
        }
    }

    public init(paging: Paging) {
        self.paging = paging
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        paging = try container.decode("paging")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(paging, forKey: "paging")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? PagingInformation else { return false }
      guard self.paging == object.paging else { return false }
      return true
    }

    public static func == (lhs: PagingInformation, rhs: PagingInformation) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
