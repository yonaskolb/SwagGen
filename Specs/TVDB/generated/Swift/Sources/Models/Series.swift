//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public struct Series: APIModel {

    public var added: String?

    public var airsDayOfWeek: String?

    public var airsTime: String?

    public var aliases: [String]?

    public var banner: String?

    public var firstAired: String?

    public var genre: [String]?

    public var _id: Int?

    public var imdbId: String?

    public var lastUpdated: Int?

    public var network: String?

    public var networkId: String?

    public var overview: String?

    public var rating: String?

    public var runtime: String?

    public var seriesId: String?

    public var seriesName: String?

    public var siteRating: Double?

    public var siteRatingCount: Int?

    public var slug: String?

    public var status: String?

    public var zap2itId: String?

    public init(added: String? = nil, airsDayOfWeek: String? = nil, airsTime: String? = nil, aliases: [String]? = nil, banner: String? = nil, firstAired: String? = nil, genre: [String]? = nil, _id: Int? = nil, imdbId: String? = nil, lastUpdated: Int? = nil, network: String? = nil, networkId: String? = nil, overview: String? = nil, rating: String? = nil, runtime: String? = nil, seriesId: String? = nil, seriesName: String? = nil, siteRating: Double? = nil, siteRatingCount: Int? = nil, slug: String? = nil, status: String? = nil, zap2itId: String? = nil) {
        self.added = added
        self.airsDayOfWeek = airsDayOfWeek
        self.airsTime = airsTime
        self.aliases = aliases
        self.banner = banner
        self.firstAired = firstAired
        self.genre = genre
        self._id = _id
        self.imdbId = imdbId
        self.lastUpdated = lastUpdated
        self.network = network
        self.networkId = networkId
        self.overview = overview
        self.rating = rating
        self.runtime = runtime
        self.seriesId = seriesId
        self.seriesName = seriesName
        self.siteRating = siteRating
        self.siteRatingCount = siteRatingCount
        self.slug = slug
        self.status = status
        self.zap2itId = zap2itId
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        added = try container.decodeIfPresent("added")
        airsDayOfWeek = try container.decodeIfPresent("airsDayOfWeek")
        airsTime = try container.decodeIfPresent("airsTime")
        aliases = try container.decodeArrayIfPresent("aliases")
        banner = try container.decodeIfPresent("banner")
        firstAired = try container.decodeIfPresent("firstAired")
        genre = try container.decodeArrayIfPresent("genre")
        _id = try container.decodeIfPresent("id")
        imdbId = try container.decodeIfPresent("imdbId")
        lastUpdated = try container.decodeIfPresent("lastUpdated")
        network = try container.decodeIfPresent("network")
        networkId = try container.decodeIfPresent("networkId")
        overview = try container.decodeIfPresent("overview")
        rating = try container.decodeIfPresent("rating")
        runtime = try container.decodeIfPresent("runtime")
        seriesId = try container.decodeIfPresent("seriesId")
        seriesName = try container.decodeIfPresent("seriesName")
        siteRating = try container.decodeIfPresent("siteRating")
        siteRatingCount = try container.decodeIfPresent("siteRatingCount")
        slug = try container.decodeIfPresent("slug")
        status = try container.decodeIfPresent("status")
        zap2itId = try container.decodeIfPresent("zap2itId")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(added, forKey: "added")
        try container.encodeIfPresent(airsDayOfWeek, forKey: "airsDayOfWeek")
        try container.encodeIfPresent(airsTime, forKey: "airsTime")
        try container.encodeIfPresent(aliases, forKey: "aliases")
        try container.encodeIfPresent(banner, forKey: "banner")
        try container.encodeIfPresent(firstAired, forKey: "firstAired")
        try container.encodeIfPresent(genre, forKey: "genre")
        try container.encodeIfPresent(_id, forKey: "id")
        try container.encodeIfPresent(imdbId, forKey: "imdbId")
        try container.encodeIfPresent(lastUpdated, forKey: "lastUpdated")
        try container.encodeIfPresent(network, forKey: "network")
        try container.encodeIfPresent(networkId, forKey: "networkId")
        try container.encodeIfPresent(overview, forKey: "overview")
        try container.encodeIfPresent(rating, forKey: "rating")
        try container.encodeIfPresent(runtime, forKey: "runtime")
        try container.encodeIfPresent(seriesId, forKey: "seriesId")
        try container.encodeIfPresent(seriesName, forKey: "seriesName")
        try container.encodeIfPresent(siteRating, forKey: "siteRating")
        try container.encodeIfPresent(siteRatingCount, forKey: "siteRatingCount")
        try container.encodeIfPresent(slug, forKey: "slug")
        try container.encodeIfPresent(status, forKey: "status")
        try container.encodeIfPresent(zap2itId, forKey: "zap2itId")
    }

}
