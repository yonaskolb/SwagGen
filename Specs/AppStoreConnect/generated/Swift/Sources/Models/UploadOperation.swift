//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class UploadOperation: APIModel {

    public var length: Int?

    public var method: String?

    public var offset: Int?

    public var requestHeaders: [UploadOperationHeader]?

    public var url: String?

    public init(length: Int? = nil, method: String? = nil, offset: Int? = nil, requestHeaders: [UploadOperationHeader]? = nil, url: String? = nil) {
        self.length = length
        self.method = method
        self.offset = offset
        self.requestHeaders = requestHeaders
        self.url = url
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        length = try container.decodeIfPresent("length")
        method = try container.decodeIfPresent("method")
        offset = try container.decodeIfPresent("offset")
        requestHeaders = try container.decodeArrayIfPresent("requestHeaders")
        url = try container.decodeIfPresent("url")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(length, forKey: "length")
        try container.encodeIfPresent(method, forKey: "method")
        try container.encodeIfPresent(offset, forKey: "offset")
        try container.encodeIfPresent(requestHeaders, forKey: "requestHeaders")
        try container.encodeIfPresent(url, forKey: "url")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? UploadOperation else { return false }
      guard self.length == object.length else { return false }
      guard self.method == object.method else { return false }
      guard self.offset == object.offset else { return false }
      guard self.requestHeaders == object.requestHeaders else { return false }
      guard self.url == object.url else { return false }
      return true
    }

    public static func == (lhs: UploadOperation, rhs: UploadOperation) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
