//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class AppMediaAssetState: APIModel {

    public enum State: String, Codable, Equatable, CaseIterable {
        case awaitingUpload = "AWAITING_UPLOAD"
        case uploadComplete = "UPLOAD_COMPLETE"
        case complete = "COMPLETE"
        case failed = "FAILED"
    }

    public var errors: [AppMediaStateError]?

    public var state: State?

    public var warnings: [AppMediaStateError]?

    public init(errors: [AppMediaStateError]? = nil, state: State? = nil, warnings: [AppMediaStateError]? = nil) {
        self.errors = errors
        self.state = state
        self.warnings = warnings
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        errors = try container.decodeArrayIfPresent("errors")
        state = try container.decodeIfPresent("state")
        warnings = try container.decodeArrayIfPresent("warnings")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(errors, forKey: "errors")
        try container.encodeIfPresent(state, forKey: "state")
        try container.encodeIfPresent(warnings, forKey: "warnings")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? AppMediaAssetState else { return false }
      guard self.errors == object.errors else { return false }
      guard self.state == object.state else { return false }
      guard self.warnings == object.warnings else { return false }
      return true
    }

    public static func == (lhs: AppMediaAssetState, rhs: AppMediaAssetState) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
